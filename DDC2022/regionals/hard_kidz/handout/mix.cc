dst->b[0x13] = KEK(LOL(dst->b[0x13], 7), LOL(src1->b[0x07], 2));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 5), LOL(src1->b[0x19], 0));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 7), LOL(src1->b[0x1c], 5));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 4), LOL(src1->b[0x13], 7));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 6), LOL(src1->b[0x06], 4));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 0), LOL(src1->b[0x0b], 1));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 3), LOL(src1->b[0x07], 5));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 1), LOL(src1->b[0x1d], 5));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 3), LOL(src1->b[0x07], 0));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 7), LOL(src1->b[0x18], 1));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 6), LOL(src1->b[0x0e], 5));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 2), LOL(src1->b[0x1f], 4));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 7), LOL(src1->b[0x09], 7));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 0), LOL(src1->b[0x14], 5));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 4), LOL(src1->b[0x13], 0));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 3), LOL(src1->b[0x11], 7));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 0), LOL(src1->b[0x06], 4));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 1), LOL(src1->b[0x18], 4));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 7), LOL(src1->b[0x02], 4));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 7), LOL(src1->b[0x01], 2));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 7), LOL(src1->b[0x03], 1));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 2), LOL(src1->b[0x1b], 7));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 6), LOL(src1->b[0x02], 6));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 5), LOL(src1->b[0x0e], 3));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 4), LOL(src1->b[0x1b], 2));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 1), LOL(src1->b[0x05], 0));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 0), LOL(src1->b[0x17], 2));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 1), LOL(src1->b[0x01], 2));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 3), LOL(src1->b[0x05], 0));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 2), LOL(src1->b[0x0c], 2));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 2), LOL(src1->b[0x10], 0));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 2), LOL(src1->b[0x01], 2));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 1), LOL(src1->b[0x16], 2));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 6), LOL(src1->b[0x1c], 3));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 0), LOL(src1->b[0x0b], 1));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 6), LOL(src1->b[0x1e], 4));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 6), LOL(src1->b[0x04], 5));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 4), LOL(src1->b[0x12], 6));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 6), LOL(src1->b[0x17], 6));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 3), LOL(src1->b[0x1d], 5));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 6), LOL(src1->b[0x0b], 2));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 4), LOL(src1->b[0x0d], 2));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 5), LOL(src1->b[0x08], 5));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 4), LOL(src1->b[0x14], 1));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 3), LOL(src1->b[0x0a], 3));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 5), LOL(src1->b[0x04], 1));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 2), LOL(src1->b[0x15], 5));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 2), LOL(src1->b[0x0d], 0));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 5), LOL(src1->b[0x03], 3));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 4), LOL(src1->b[0x19], 1));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 2), LOL(src1->b[0x06], 4));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 5), LOL(src1->b[0x1b], 6));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 6), LOL(src1->b[0x1c], 5));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 6), LOL(src1->b[0x15], 3));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 3), LOL(src1->b[0x1a], 4));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 6), LOL(src1->b[0x09], 0));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 7), LOL(src1->b[0x16], 1));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 4), LOL(src1->b[0x10], 0));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 3), LOL(src1->b[0x11], 0));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 7), LOL(src1->b[0x0f], 4));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 7), LOL(src1->b[0x17], 0));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 5), LOL(src1->b[0x00], 1));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 4), LOL(src1->b[0x13], 7));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 6), LOL(src1->b[0x08], 0));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 5), LOL(src1->b[0x1f], 3));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 6), LOL(src1->b[0x03], 0));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 1), LOL(src1->b[0x0c], 5));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 7), LOL(src1->b[0x1e], 6));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 6), LOL(src1->b[0x19], 7));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 5), LOL(src1->b[0x1f], 6));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 5), LOL(src1->b[0x0d], 4));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 7), LOL(src1->b[0x16], 6));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 5), LOL(src1->b[0x1e], 4));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 1), LOL(src1->b[0x12], 1));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 7), LOL(src1->b[0x0e], 3));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 7), LOL(src1->b[0x0f], 5));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 6), LOL(src1->b[0x0c], 0));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 0), LOL(src1->b[0x1a], 7));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 4), LOL(src1->b[0x08], 0));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 4), LOL(src1->b[0x14], 2));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 3), LOL(src1->b[0x0a], 5));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 0), LOL(src1->b[0x11], 4));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 4), LOL(src1->b[0x00], 4));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 6), LOL(src1->b[0x02], 3));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 2), LOL(src1->b[0x12], 0));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 7), LOL(src1->b[0x09], 7));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 6), LOL(src1->b[0x1d], 0));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 3), LOL(src1->b[0x0f], 5));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 2), LOL(src1->b[0x1a], 2));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 0), LOL(src1->b[0x00], 1));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 5), LOL(src1->b[0x0a], 5));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 6), LOL(src1->b[0x15], 6));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 3), LOL(src1->b[0x18], 6));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 1), LOL(src1->b[0x10], 7));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 2), LOL(src1->b[0x05], 2));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 7), LOL(src1->b[0x04], 3));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 0), LOL(src2->b[0x0e], 2));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 1), LOL(src2->b[0x09], 7));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 2), LOL(src2->b[0x10], 3));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 1), LOL(src2->b[0x1b], 4));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 0), LOL(src2->b[0x01], 7));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 6), LOL(src2->b[0x02], 0));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 1), LOL(src2->b[0x16], 4));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 0), LOL(src2->b[0x15], 7));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 1), LOL(src2->b[0x17], 4));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 5), LOL(src2->b[0x0f], 5));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 4), LOL(src2->b[0x19], 1));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 3), LOL(src2->b[0x07], 0));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 5), LOL(src2->b[0x1e], 2));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 1), LOL(src2->b[0x08], 5));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 7), LOL(src2->b[0x03], 2));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 2), LOL(src2->b[0x1f], 6));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 2), LOL(src2->b[0x06], 0));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 6), LOL(src2->b[0x07], 6));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 0), LOL(src2->b[0x00], 0));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 1), LOL(src2->b[0x1d], 3));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 0), LOL(src2->b[0x1d], 3));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 0), LOL(src2->b[0x16], 3));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 4), LOL(src2->b[0x0f], 1));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 4), LOL(src2->b[0x12], 6));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 2), LOL(src2->b[0x06], 2));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 5), LOL(src2->b[0x05], 0));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 2), LOL(src2->b[0x1c], 4));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 1), LOL(src2->b[0x13], 6));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 6), LOL(src2->b[0x09], 0));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 0), LOL(src2->b[0x0c], 3));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 3), LOL(src2->b[0x1b], 7));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 2), LOL(src2->b[0x1c], 5));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 7), LOL(src2->b[0x01], 0));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 5), LOL(src2->b[0x0d], 6));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 5), LOL(src2->b[0x09], 4));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 7), LOL(src2->b[0x0b], 2));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 7), LOL(src2->b[0x17], 3));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 5), LOL(src2->b[0x1c], 0));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 3), LOL(src2->b[0x11], 2));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 7), LOL(src2->b[0x10], 7));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 1), LOL(src2->b[0x11], 1));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 0), LOL(src2->b[0x15], 6));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 3), LOL(src2->b[0x0b], 6));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 4), LOL(src2->b[0x04], 0));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 0), LOL(src2->b[0x14], 0));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 0), LOL(src2->b[0x00], 4));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 4), LOL(src2->b[0x0f], 7));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 6), LOL(src2->b[0x00], 1));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 7), LOL(src2->b[0x1f], 6));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 5), LOL(src2->b[0x1a], 2));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 0), LOL(src2->b[0x18], 3));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 5), LOL(src2->b[0x15], 5));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 6), LOL(src2->b[0x14], 0));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 7), LOL(src2->b[0x06], 5));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 2), LOL(src2->b[0x1d], 6));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 1), LOL(src2->b[0x08], 2));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 7), LOL(src2->b[0x0e], 4));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 1), LOL(src2->b[0x1e], 6));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 6), LOL(src2->b[0x04], 7));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 5), LOL(src2->b[0x05], 2));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 2), LOL(src2->b[0x05], 1));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 2), LOL(src2->b[0x1b], 4));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 5), LOL(src2->b[0x11], 4));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 5), LOL(src2->b[0x14], 2));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 4), LOL(src2->b[0x08], 0));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 7), LOL(src2->b[0x0c], 1));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 7), LOL(src2->b[0x12], 3));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 4), LOL(src2->b[0x12], 2));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 4), LOL(src2->b[0x0a], 5));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 5), LOL(src2->b[0x03], 0));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 3), LOL(src2->b[0x13], 7));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 3), LOL(src2->b[0x19], 5));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 4), LOL(src2->b[0x0d], 2));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 7), LOL(src2->b[0x07], 1));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 5), LOL(src2->b[0x1a], 7));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 6), LOL(src2->b[0x1f], 6));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 1), LOL(src2->b[0x0a], 7));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 7), LOL(src2->b[0x13], 5));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 0), LOL(src2->b[0x17], 3));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 2), LOL(src2->b[0x16], 5));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 5), LOL(src2->b[0x02], 6));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 7), LOL(src2->b[0x1e], 6));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 4), LOL(src2->b[0x18], 3));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 0), LOL(src2->b[0x10], 5));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 2), LOL(src2->b[0x01], 2));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 2), LOL(src2->b[0x1a], 7));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 3), LOL(src2->b[0x0c], 3));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 6), LOL(src2->b[0x0a], 5));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 2), LOL(src2->b[0x03], 4));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 4), LOL(src2->b[0x18], 5));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 4), LOL(src2->b[0x0e], 5));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 0), LOL(src2->b[0x0d], 6));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 2), LOL(src2->b[0x0b], 3));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 1), LOL(src2->b[0x02], 2));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 1), LOL(src2->b[0x19], 6));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 6), LOL(src2->b[0x04], 1));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 4), LOL(dst->b[0x0b], 7));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 1), LOL(dst->b[0x12], 1));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 3), LOL(dst->b[0x0b], 2));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 1), LOL(dst->b[0x00], 6));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 4), LOL(dst->b[0x04], 7));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 1), LOL(dst->b[0x1f], 7));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 3), LOL(dst->b[0x05], 4));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 1), LOL(dst->b[0x1a], 0));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 2), LOL(dst->b[0x16], 1));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 3), LOL(dst->b[0x0a], 0));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 7), LOL(dst->b[0x01], 6));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 7), LOL(dst->b[0x14], 1));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 0), LOL(dst->b[0x0c], 5));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 1), LOL(dst->b[0x16], 4));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 7), LOL(dst->b[0x02], 2));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 2), LOL(dst->b[0x16], 1));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 2), LOL(dst->b[0x1f], 4));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 1), LOL(dst->b[0x19], 6));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 0), LOL(dst->b[0x1a], 5));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 1), LOL(dst->b[0x18], 2));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 5), LOL(dst->b[0x11], 4));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 7), LOL(dst->b[0x09], 1));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 0), LOL(dst->b[0x08], 6));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 5), LOL(dst->b[0x06], 4));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 3), LOL(dst->b[0x02], 4));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 0), LOL(dst->b[0x05], 2));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 3), LOL(dst->b[0x0d], 1));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 6), LOL(dst->b[0x02], 4));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 3), LOL(dst->b[0x13], 6));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 5), LOL(dst->b[0x07], 0));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 7), LOL(dst->b[0x15], 4));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 2), LOL(dst->b[0x1c], 0));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 1), LOL(dst->b[0x1e], 1));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 7), LOL(dst->b[0x17], 4));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 7), LOL(dst->b[0x04], 1));
dst->b[0x1f] = KEK(LOL(dst->b[0x1f], 3), LOL(dst->b[0x10], 1));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 2), LOL(dst->b[0x1e], 6));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 1), LOL(dst->b[0x1c], 0));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 5), LOL(dst->b[0x11], 5));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 3), LOL(dst->b[0x1f], 7));
dst->b[0x13] = KEK(LOL(dst->b[0x13], 2), LOL(dst->b[0x0a], 2));
dst->b[0x0e] = KEK(LOL(dst->b[0x0e], 6), LOL(dst->b[0x17], 3));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 0), LOL(dst->b[0x0c], 7));
dst->b[0x00] = KEK(LOL(dst->b[0x00], 7), LOL(dst->b[0x05], 1));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 5), LOL(dst->b[0x0d], 2));
dst->b[0x0b] = KEK(LOL(dst->b[0x0b], 7), LOL(dst->b[0x0f], 3));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 5), LOL(dst->b[0x03], 4));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 4), LOL(dst->b[0x1e], 7));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 7), LOL(dst->b[0x04], 2));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 6), LOL(dst->b[0x11], 4));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 0), LOL(dst->b[0x09], 2));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 6), LOL(dst->b[0x0e], 5));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 4), LOL(dst->b[0x14], 6));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 1), LOL(dst->b[0x13], 1));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 5), LOL(dst->b[0x1b], 7));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 5), LOL(dst->b[0x19], 6));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 6), LOL(dst->b[0x1b], 4));
dst->b[0x08] = KEK(LOL(dst->b[0x08], 0), LOL(dst->b[0x18], 3));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 1), LOL(dst->b[0x03], 4));
dst->b[0x1a] = KEK(LOL(dst->b[0x1a], 3), LOL(dst->b[0x13], 7));
dst->b[0x04] = KEK(LOL(dst->b[0x04], 2), LOL(dst->b[0x07], 5));
dst->b[0x0d] = KEK(LOL(dst->b[0x0d], 2), LOL(dst->b[0x17], 6));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 6), LOL(dst->b[0x1d], 0));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 1), LOL(dst->b[0x1a], 5));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 6), LOL(dst->b[0x08], 4));
dst->b[0x10] = KEK(LOL(dst->b[0x10], 2), LOL(dst->b[0x01], 2));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 6), LOL(dst->b[0x1d], 1));
dst->b[0x09] = KEK(LOL(dst->b[0x09], 1), LOL(dst->b[0x06], 6));
dst->b[0x11] = KEK(LOL(dst->b[0x11], 4), LOL(dst->b[0x10], 5));
dst->b[0x1b] = KEK(LOL(dst->b[0x1b], 0), LOL(dst->b[0x00], 1));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 1), LOL(dst->b[0x12], 2));
dst->b[0x18] = KEK(LOL(dst->b[0x18], 5), LOL(dst->b[0x1d], 4));
dst->b[0x1d] = KEK(LOL(dst->b[0x1d], 1), LOL(dst->b[0x0c], 3));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 3), LOL(dst->b[0x00], 2));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 3), LOL(dst->b[0x12], 6));
dst->b[0x15] = KEK(LOL(dst->b[0x15], 2), LOL(dst->b[0x0b], 7));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 1), LOL(dst->b[0x0f], 4));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 7), LOL(dst->b[0x15], 6));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 4), LOL(dst->b[0x0e], 6));
dst->b[0x1c] = KEK(LOL(dst->b[0x1c], 1), LOL(dst->b[0x0f], 1));
dst->b[0x07] = KEK(LOL(dst->b[0x07], 0), LOL(dst->b[0x15], 5));
dst->b[0x12] = KEK(LOL(dst->b[0x12], 4), LOL(dst->b[0x19], 5));
dst->b[0x19] = KEK(LOL(dst->b[0x19], 7), LOL(dst->b[0x06], 1));
dst->b[0x05] = KEK(LOL(dst->b[0x05], 2), LOL(dst->b[0x01], 3));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 1), LOL(dst->b[0x0a], 1));
dst->b[0x02] = KEK(LOL(dst->b[0x02], 1), LOL(dst->b[0x03], 0));
dst->b[0x0f] = KEK(LOL(dst->b[0x0f], 7), LOL(dst->b[0x08], 7));
dst->b[0x0a] = KEK(LOL(dst->b[0x0a], 2), LOL(dst->b[0x0d], 1));
dst->b[0x06] = KEK(LOL(dst->b[0x06], 7), LOL(dst->b[0x1c], 1));
dst->b[0x17] = KEK(LOL(dst->b[0x17], 4), LOL(dst->b[0x10], 4));
dst->b[0x0c] = KEK(LOL(dst->b[0x0c], 7), LOL(dst->b[0x18], 1));
dst->b[0x03] = KEK(LOL(dst->b[0x03], 0), LOL(dst->b[0x0e], 0));
dst->b[0x01] = KEK(LOL(dst->b[0x01], 1), LOL(dst->b[0x09], 1));
dst->b[0x1e] = KEK(LOL(dst->b[0x1e], 4), LOL(dst->b[0x14], 1));
dst->b[0x14] = KEK(LOL(dst->b[0x14], 6), LOL(dst->b[0x1b], 7));
dst->b[0x16] = KEK(LOL(dst->b[0x16], 6), LOL(dst->b[0x07], 0));
